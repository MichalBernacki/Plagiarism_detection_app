@startuml

    [*] -down-> Startup
    Startup -down-> Open : <b>pbOpen</b> clicked(bool)
    Error -up-> Open : <b>pbOpen</b> clicked(bool)
    Open -right-> View : <b>this</b> opened()
    Open -down-> Error : <b>this</b> error("open")
    View -left-> Open : <b>pbOpen</b> clicked(bool)
    View -right-> Choose : <b>pbStart</b> clicked(bool)
    Compare -left-> Choose : <b>pbStart</b> clicked(bool)
    Compare -left-> Open : <b>pbOpen</b> clicked(bool)
    Choose -left-> View : <b>this</b> mustChoose()
    Choose -right-> Compare : <b>this</b> choosed()
    Compare -down-> Error : <b>this</b> error("compare")
    Compare -right-> Show : <b>taCompare</b> cellClicked(int, int)
    Compare -up-> Clean : <b>pbOpen</b> clicked(bool)
    Clean -up-> Open : <b>this</b> cleared()
    Show -right-> Show : <b>taCompare</b> cellClicked(int, int)

    note top of Startup
    - we probably will have more chooseBox than 2
    end note

    note top of Open 
    - open dialog for load directory
    - load directory
    - first level subdirectories should be separate projects
    - should store path in some variable
    end note

    note top of Choose 
    - user must choose at least one alghoritms
    - if didn't choose show message box and back to <b>View</b>
    end note

    note bottom of Compare
    - compare files with implemented alghoritms
    - selected file name is used
    end note

    note bottom of Error
    - show <b>QMessageBox</b> and go back to <b>Open</b> state
    end note
    
    note bottom of Show
        - show percent results for all methods separetly
        - activate buttons which will show most similar file
    end note


    Startup: <b>pbOpen</b> enabled <b>true</b>
    Startup: <b>pbStart</b> enabled <b>false</b>
    Startup: <b>taCompare</b> enabled <b>false</b>
    Startup: <b>cbBox1</b> enabled <b>false</b>
    Startup: <b>cbBox2</b> enabled <b>false</b>
    Startup: <b>frResult</b> enabled <b>false</b>
    Startup: <b>leLabel</b> text <b>Load directory to start...</b>
    
   

    Open: <b>frResult</b> enabled <b>false</b>
    Open: <b>state</b> entered() -> <b>this</b> open()

    View: <b>pbOpen</b> enabled <b>true</b>
    View: <b>pbStart</b> enabled <b>true</b>
    View: <b>taCompare</b> enabled <b>false</b>
    View: <b>cbBox1</b> enabled <b>true</b>
    View: <b>cbBox2</b> enabled <b>true</b>
    
    
    Compare: <b>taCompare</b> enabled <b>true</b>
    Compare: <b>state</b> entered() -> <b>this</b> compare()

    Choose: <b>state</b> entered() -> <b>this</b> checkChoose()

    Error: <b>pbOpen</b> enabled <b>true</b>
    Error: <b>pbStart</b> enabled <b>false</b>
    Error: <b>cbBox1</b> enabled <b>false</b>
    Error: <b>cbBox2</b> enabled <b>false</b>
    Error: <b>taCompare</b> enabled <b>false</b>
    Error: <b>state</b> entered() -> <b>this</b> errorOpen()

    Clear: <b>state</b> entered() -> <b>this</b> clear()
    
    Show: <b>frResult</b> enabled <b>true</b>
    Show: <b>state</b> entered() -> <b>this</b> showResult()
       

@enduml